{"ast":null,"code":"import { onMounted } from 'vue';\nimport { Pie, Bar } from '@antv/g2plot';\nexport default {\n  name: 'IndexPage',\n  setup() {\n    onMounted(() => {\n      try {\n        // 初始化饼图\n        const pieChart = new Pie('pieChart', {\n          data: [{\n            value: 30,\n            name: 'A区'\n          }, {\n            value: 20,\n            name: 'B区'\n          }, {\n            value: 25,\n            name: 'C区'\n          }, {\n            value: 25,\n            name: 'D区'\n          }],\n          angleField: 'value',\n          colorField: 'name',\n          radius: 0.8,\n          label: {\n            type: 'inner',\n            offset: '-30%',\n            content: '{name}: {value}',\n            style: {\n              fontSize: 12\n            }\n          },\n          legend: {\n            position: 'top'\n          }\n        });\n        pieChart.render();\n\n        // 初始化柱状图\n        const barChart = new Bar('barChart', {\n          data: [{\n            date: '11-08',\n            in: 2,\n            out: 2\n          }, {\n            date: '11-09',\n            in: 2,\n            out: 2\n          }, {\n            date: '11-14',\n            in: 2,\n            out: 2\n          }],\n          xField: 'date',\n          yField: ['in', 'out'],\n          stack: true,\n          color: {\n            in: '#e0f2f1',\n            out: '#fff3e0'\n          },\n          label: {\n            position: 'top'\n          },\n          legend: {\n            position: 'top'\n          }\n        });\n        barChart.render();\n      } catch (error) {\n        console.error('图表渲染出错:', error);\n      }\n    });\n    return {};\n  }\n};","map":{"version":3,"names":["onMounted","Pie","Bar","name","setup","pieChart","data","value","angleField","colorField","radius","label","type","offset","content","style","fontSize","legend","position","render","barChart","date","in","out","xField","yField","stack","color","error","console"],"sources":["src/views/demo/antv1/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- 统计卡片区域 -->\r\n    <div class=\"stat-container\">\r\n      <div class=\"stat-card\" :style=\"{ background: '#19be6b', color: 'white' }\">\r\n        <div class=\"card-icon\">¥</div>\r\n        <div class=\"card-content\">\r\n          <h3>今日收入</h3>\r\n          <p>1530</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card\" :style=\"{ background: '#ff4949', color: 'white' }\">\r\n        <div class=\"card-icon\">👤</div>\r\n        <div class=\"card-content\">\r\n          <h3>用户总数</h3>\r\n          <p>1</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card\" :style=\"{ background: '#409eff', color: 'white' }\">\r\n        <div class=\"card-icon\">P</div>\r\n        <div class=\"card-content\">\r\n          <h3>剩余车位</h3>\r\n          <p>100/100</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"stat-card\" :style=\"{ background: '#9062ff', color: 'white' }\">\r\n        <div class=\"card-icon\">📝</div>\r\n        <div class=\"card-content\">\r\n          <h3>车辆记录</h3>\r\n          <p>4条</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 图表区域 -->\r\n    <div class=\"charts-container\">\r\n      <div class=\"chart-box\">\r\n        <div class=\"chart-title\">停车场剩余车位</div>\r\n        <div id=\"pieChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n      <div class=\"chart-box\">\r\n        <div class=\"chart-title\">车辆进出情况</div>\r\n        <div id=\"barChart\" style=\"height: 300px;\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted } from 'vue';\r\nimport { Pie, Bar } from '@antv/g2plot';\r\n\r\nexport default {\r\n  name: 'IndexPage',\r\n  setup() {\r\n    onMounted(() => {\r\n      try {\r\n        // 初始化饼图\r\n        const pieChart = new Pie('pieChart', {\r\n          data: [\r\n            { value: 30, name: 'A区' },\r\n            { value: 20, name: 'B区' },\r\n            { value: 25, name: 'C区' },\r\n            { value: 25, name: 'D区' }\r\n          ],\r\n          angleField: 'value',\r\n          colorField: 'name',\r\n          radius: 0.8,\r\n          label: {\r\n            type: 'inner',\r\n            offset: '-30%',\r\n            content: '{name}: {value}',\r\n            style: {\r\n              fontSize: 12\r\n            }\r\n          },\r\n          legend: {\r\n            position: 'top'\r\n          }\r\n        });\r\n        pieChart.render();\r\n\r\n        // 初始化柱状图\r\n        const barChart = new Bar('barChart', {\r\n          data: [\r\n            { date: '11-08', in: 2, out: 2 },\r\n            { date: '11-09', in: 2, out: 2 },\r\n            { date: '11-14', in: 2, out: 2 }\r\n          ],\r\n          xField: 'date',\r\n          yField: ['in', 'out'],\r\n          stack: true,\r\n          color: {\r\n            in: '#e0f2f1',\r\n            out: '#fff3e0'\r\n          },\r\n          label: {\r\n            position: 'top'\r\n          },\r\n          legend: {\r\n            position: 'top'\r\n          }\r\n        });\r\n        barChart.render();\r\n      } catch (error) {\r\n        console.error('图表渲染出错:', error);\r\n      }\r\n    });\r\n\r\n    return {};\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  background: #f5f7fa;\r\n  padding: 20px;\r\n}\r\n\r\n/* 统计卡片容器样式 */\r\n.stat-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 统计卡片样式 */\r\n.stat-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n/* 卡片图标样式 */\r\n.card-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n}\r\n\r\n/* 卡片内容样式 */\r\n.card-content h3 {\r\n  color: #666;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.card-content p {\r\n  color: #333;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 图表容器样式 */\r\n.charts-container {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n/* 单个图表盒子样式 */\r\n.chart-box {\r\n  flex: 1;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n\r\n/* 图表标题样式 */\r\n.chart-title {\r\n  color: #333;\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n}\r\n</style>"],"mappings":"AAiDA,SAAAA,SAAA;AACA,SAAAC,GAAA,EAAAC,GAAA;AAEA;EACAC,IAAA;EACAC,MAAA;IACAJ,SAAA;MACA;QACA;QACA,MAAAK,QAAA,OAAAJ,GAAA;UACAK,IAAA,GACA;YAAAC,KAAA;YAAAJ,IAAA;UAAA,GACA;YAAAI,KAAA;YAAAJ,IAAA;UAAA,GACA;YAAAI,KAAA;YAAAJ,IAAA;UAAA,GACA;YAAAI,KAAA;YAAAJ,IAAA;UAAA,EACA;UACAK,UAAA;UACAC,UAAA;UACAC,MAAA;UACAC,KAAA;YACAC,IAAA;YACAC,MAAA;YACAC,OAAA;YACAC,KAAA;cACAC,QAAA;YACA;UACA;UACAC,MAAA;YACAC,QAAA;UACA;QACA;QACAb,QAAA,CAAAc,MAAA;;QAEA;QACA,MAAAC,QAAA,OAAAlB,GAAA;UACAI,IAAA,GACA;YAAAe,IAAA;YAAAC,EAAA;YAAAC,GAAA;UAAA,GACA;YAAAF,IAAA;YAAAC,EAAA;YAAAC,GAAA;UAAA,GACA;YAAAF,IAAA;YAAAC,EAAA;YAAAC,GAAA;UAAA,EACA;UACAC,MAAA;UACAC,MAAA;UACAC,KAAA;UACAC,KAAA;YACAL,EAAA;YACAC,GAAA;UACA;UACAZ,KAAA;YACAO,QAAA;UACA;UACAD,MAAA;YACAC,QAAA;UACA;QACA;QACAE,QAAA,CAAAD,MAAA;MACA,SAAAS,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}