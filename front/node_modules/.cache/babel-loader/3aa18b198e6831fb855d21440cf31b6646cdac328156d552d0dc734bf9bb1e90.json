{"ast":null,"code":"import { Bar, Line, Pie } from '@antv/g2plot';\nexport default {\n  name: \"test-page\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      barPlot: {},\n      linePlot: {},\n      piePlot: {},\n      // 柱状图数据，展示不同停车场的停车数量\n      barData: [{\n        title: '停车场A',\n        type: '停车数量',\n        value: 20\n      }, {\n        title: '停车场B',\n        type: '停车数量',\n        value: 15\n      }, {\n        title: '停车场C',\n        type: '停车数量',\n        value: 25\n      }],\n      // 折线图数据，展示一天内不同时段的停车数量变化\n      lineData: [{\n        time: '08:00',\n        count: 10\n      }, {\n        time: '10:00',\n        count: 15\n      }, {\n        time: '12:00',\n        count: 20\n      }, {\n        time: '14:00',\n        count: 25\n      }, {\n        time: '16:00',\n        count: 22\n      }, {\n        time: '18:00',\n        count: 18\n      }],\n      // 饼图数据，展示不同类型车辆的占比\n      pieData: [{\n        type: '轿车',\n        value: 60\n      }, {\n        type: 'SUV',\n        value: 25\n      }, {\n        type: '货车',\n        value: 15\n      }]\n    };\n  },\n  methods: {\n    init() {\n      this.initBarChart();\n      this.initLineChart();\n      this.initPieChart();\n    },\n    initBarChart() {\n      const data = this.barData;\n      this.barPlot = new Bar('bar-container', {\n        data,\n        isGroup: true,\n        xField: 'value',\n        yField: 'title',\n        seriesField: 'type',\n        dodgePadding: 4,\n        label: {\n          position: 'middle',\n          layout: [{\n            type: 'interval-adjust-position'\n          }, {\n            type: 'interval-hide-overlap'\n          }, {\n            type: 'adjust-color'\n          }]\n        },\n        color: '#19be6b',\n        // 设置柱状图颜色\n        legend: {\n          position: 'top' // 图例位置\n        },\n        xAxis: {\n          title: {\n            text: '停车数量',\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold'\n            }\n          }\n        },\n        yAxis: {\n          title: {\n            text: '停车场',\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold'\n            }\n          }\n        }\n      });\n      this.barPlot.render();\n    },\n    initLineChart() {\n      const data = this.lineData;\n      this.linePlot = new Line('line-container', {\n        data,\n        xField: 'time',\n        yField: 'count',\n        point: {\n          size: 5,\n          shape: 'circle'\n        },\n        label: {\n          position: 'top'\n        },\n        color: '#409eff',\n        // 设置折线图颜色\n        legend: {\n          position: 'top' // 图例位置\n        },\n        xAxis: {\n          title: {\n            text: '时间',\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold'\n            }\n          }\n        },\n        yAxis: {\n          title: {\n            text: '停车数量',\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold'\n            }\n          }\n        }\n      });\n      this.linePlot.render();\n    },\n    initPieChart() {\n      const data = this.pieData;\n      this.piePlot = new Pie('pie-container', {\n        data,\n        angleField: 'value',\n        colorField: 'type',\n        radius: 0.8,\n        label: {\n          type: 'outer',\n          content: '{name}: {percentage}',\n          style: {\n            fontSize: 12\n          }\n        },\n        legend: {\n          position: 'right' // 图例位置\n        },\n        tooltip: {\n          formatter: ({\n            name,\n            value,\n            percentage\n          }) => `${name}: ${value} (${percentage})`\n        }\n      });\n      this.piePlot.render();\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};","map":{"version":3,"names":["Bar","Line","Pie","name","components","props","data","barPlot","linePlot","piePlot","barData","title","type","value","lineData","time","count","pieData","methods","init","initBarChart","initLineChart","initPieChart","isGroup","xField","yField","seriesField","dodgePadding","label","position","layout","color","legend","xAxis","text","style","fontSize","fontWeight","yAxis","render","point","size","shape","angleField","colorField","radius","content","tooltip","formatter","percentage","mounted"],"sources":["src/views/demo/antv1/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- 顶部标题 -->\r\n    <h1 class=\"dashboard-title\">停车场数据可视化</h1>\r\n    <!-- 图表容器 -->\r\n    <div class=\"charts-container\">\r\n      <!-- 柱状图容器 -->\r\n      <div class=\"chart-item\" id=\"bar-container\"></div>\r\n      <!-- 折线图容器 -->\r\n      <div class=\"chart-item\" id=\"line-container\"></div>\r\n      <!-- 饼图容器 -->\r\n      <div class=\"chart-item\" id=\"pie-container\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Bar, Line, Pie } from '@antv/g2plot';\r\n\r\nexport default {\r\n  name: \"test-page\",\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      barPlot: {},\r\n      linePlot: {},\r\n      piePlot: {},\r\n      // 柱状图数据，展示不同停车场的停车数量\r\n      barData: [\r\n        {\r\n          title: '停车场A',\r\n          type: '停车数量',\r\n          value: 20,\r\n        },\r\n        {\r\n          title: '停车场B',\r\n          type: '停车数量',\r\n          value: 15,\r\n        },\r\n        {\r\n          title: '停车场C',\r\n          type: '停车数量',\r\n          value: 25,\r\n        }\r\n      ],\r\n      // 折线图数据，展示一天内不同时段的停车数量变化\r\n      lineData: [\r\n        {\r\n          time: '08:00',\r\n          count: 10\r\n        },\r\n        {\r\n          time: '10:00',\r\n          count: 15\r\n        },\r\n        {\r\n          time: '12:00',\r\n          count: 20\r\n        },\r\n        {\r\n          time: '14:00',\r\n          count: 25\r\n        },\r\n        {\r\n          time: '16:00',\r\n          count: 22\r\n        },\r\n        {\r\n          time: '18:00',\r\n          count: 18\r\n        }\r\n      ],\r\n      // 饼图数据，展示不同类型车辆的占比\r\n      pieData: [\r\n        {\r\n          type: '轿车',\r\n          value: 60\r\n        },\r\n        {\r\n          type: 'SUV',\r\n          value: 25\r\n        },\r\n        {\r\n          type: '货车',\r\n          value: 15\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.initBarChart();\r\n      this.initLineChart();\r\n      this.initPieChart();\r\n    },\r\n    initBarChart() {\r\n      const data = this.barData;\r\n      this.barPlot = new Bar('bar-container', {\r\n        data,\r\n        isGroup: true,\r\n        xField: 'value',\r\n        yField: 'title',\r\n        seriesField: 'type',\r\n        dodgePadding: 4,\r\n        label: {\r\n          position: 'middle',\r\n          layout: [\r\n            {\r\n              type: 'interval-adjust-position'\r\n            },\r\n            {\r\n              type: 'interval-hide-overlap'\r\n            },\r\n            {\r\n              type: 'adjust-color'\r\n            }\r\n          ]\r\n        },\r\n        color: '#19be6b', // 设置柱状图颜色\r\n        legend: {\r\n          position: 'top', // 图例位置\r\n        },\r\n        xAxis: {\r\n          title: {\r\n            text: '停车数量',\r\n            style: {\r\n              fontSize: 14,\r\n              fontWeight: 'bold'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          title: {\r\n            text: '停车场',\r\n            style: {\r\n              fontSize: 14,\r\n              fontWeight: 'bold'\r\n            }\r\n          }\r\n        }\r\n      });\r\n      this.barPlot.render();\r\n    },\r\n    initLineChart() {\r\n      const data = this.lineData;\r\n      this.linePlot = new Line('line-container', {\r\n        data,\r\n        xField: 'time',\r\n        yField: 'count',\r\n        point: {\r\n          size: 5,\r\n          shape: 'circle'\r\n        },\r\n        label: {\r\n          position: 'top'\r\n        },\r\n        color: '#409eff', // 设置折线图颜色\r\n        legend: {\r\n          position: 'top', // 图例位置\r\n        },\r\n        xAxis: {\r\n          title: {\r\n            text: '时间',\r\n            style: {\r\n              fontSize: 14,\r\n              fontWeight: 'bold'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          title: {\r\n            text: '停车数量',\r\n            style: {\r\n              fontSize: 14,\r\n              fontWeight: 'bold'\r\n            }\r\n          }\r\n        }\r\n      });\r\n      this.linePlot.render();\r\n    },\r\n    initPieChart() {\r\n      const data = this.pieData;\r\n      this.piePlot = new Pie('pie-container', {\r\n        data,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.8,\r\n        label: {\r\n          type: 'outer',\r\n          content: '{name}: {percentage}',\r\n          style: {\r\n            fontSize: 12\r\n          }\r\n        },\r\n        legend: {\r\n          position: 'right', // 图例位置\r\n        },\r\n        tooltip: {\r\n          formatter: ({ name, value, percentage }) => `${name}: ${value} (${percentage})`\r\n        }\r\n      });\r\n      this.piePlot.render();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.dashboard {\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.dashboard-title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.charts-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.chart-item {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"AAiBA,SAAAA,GAAA,EAAAC,IAAA,EAAAC,GAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,OAAA;MACA;MACAC,OAAA,GACA;QACAC,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAF,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,EACA;MACA;MACAC,QAAA,GACA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,EACA;MACA;MACAC,OAAA,GACA;QACAL,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAK,OAAA;IACAC,KAAA;MACA,KAAAC,YAAA;MACA,KAAAC,aAAA;MACA,KAAAC,YAAA;IACA;IACAF,aAAA;MACA,MAAAd,IAAA,QAAAI,OAAA;MACA,KAAAH,OAAA,OAAAP,GAAA;QACAM,IAAA;QACAiB,OAAA;QACAC,MAAA;QACAC,MAAA;QACAC,WAAA;QACAC,YAAA;QACAC,KAAA;UACAC,QAAA;UACAC,MAAA,GACA;YACAlB,IAAA;UACA,GACA;YACAA,IAAA;UACA,GACA;YACAA,IAAA;UACA;QAEA;QACAmB,KAAA;QAAA;QACAC,MAAA;UACAH,QAAA;QACA;QACAI,KAAA;UACAtB,KAAA;YACAuB,IAAA;YACAC,KAAA;cACAC,QAAA;cACAC,UAAA;YACA;UACA;QACA;QACAC,KAAA;UACA3B,KAAA;YACAuB,IAAA;YACAC,KAAA;cACAC,QAAA;cACAC,UAAA;YACA;UACA;QACA;MACA;MACA,KAAA9B,OAAA,CAAAgC,MAAA;IACA;IACAlB,cAAA;MACA,MAAAf,IAAA,QAAAQ,QAAA;MACA,KAAAN,QAAA,OAAAP,IAAA;QACAK,IAAA;QACAkB,MAAA;QACAC,MAAA;QACAe,KAAA;UACAC,IAAA;UACAC,KAAA;QACA;QACAd,KAAA;UACAC,QAAA;QACA;QACAE,KAAA;QAAA;QACAC,MAAA;UACAH,QAAA;QACA;QACAI,KAAA;UACAtB,KAAA;YACAuB,IAAA;YACAC,KAAA;cACAC,QAAA;cACAC,UAAA;YACA;UACA;QACA;QACAC,KAAA;UACA3B,KAAA;YACAuB,IAAA;YACAC,KAAA;cACAC,QAAA;cACAC,UAAA;YACA;UACA;QACA;MACA;MACA,KAAA7B,QAAA,CAAA+B,MAAA;IACA;IACAjB,aAAA;MACA,MAAAhB,IAAA,QAAAW,OAAA;MACA,KAAAR,OAAA,OAAAP,GAAA;QACAI,IAAA;QACAqC,UAAA;QACAC,UAAA;QACAC,MAAA;QACAjB,KAAA;UACAhB,IAAA;UACAkC,OAAA;UACAX,KAAA;YACAC,QAAA;UACA;QACA;QACAJ,MAAA;UACAH,QAAA;QACA;QACAkB,OAAA;UACAC,SAAA,EAAAA,CAAA;YAAA7C,IAAA;YAAAU,KAAA;YAAAoC;UAAA,SAAA9C,IAAA,KAAAU,KAAA,KAAAoC,UAAA;QACA;MACA;MACA,KAAAxC,OAAA,CAAA8B,MAAA;IACA;EACA;EACAW,QAAA;IACA,KAAA/B,IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}